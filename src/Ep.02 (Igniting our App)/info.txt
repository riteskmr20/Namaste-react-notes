Q.1-->What is "Bundler"?

A bundler is a tool used in web development to bundle together various assets and dependencies, such as JavaScript files, CSS files, images, and other resources, into a single file or set of files that can be efficiently served to the browser. Bundlers help optimize the loading and performance of web applications by reducing the number of HTTP requests and minimizing the size of transferred files.
Examples are:=webpack,vite and parcel



we are using parcel:-parcel is best library used there in the react .parcel will ignite our app parcel will give muscles to it, also give strength to it.


for installing parcel:-npm install -D parcel
there are two package or dependencies that we are install ?
dev dependencies or normal dependencies.

Q.2-->what is dev dependencies?
dev dependencies are used when we are developing our app.

Q.3-->what is normal dependencies?
normal dependencies that we are used in the production also.


npm install -D parcel so we tell npm(package manager) i want parcel in my app but a wanted as a dev dependencies(-D).







Q.4-->after installing in package.json file "parcel": "^2.11.0" then what is the ^ before version?

those are caret(^) and tidle(~)
In the package.json file, caret (^) and tilde (~) are used to define version ranges for project dependencies. They help specify which versions of a dependency are acceptable for installation or updating. Here's what they mean:

Caret (^):

:When you specify a caret (^) before a version number in the package.json file, npm (Node Package Manager) will install the latest minor version of the dependency while keeping the major version fixed.
:For example, if you specify "react": "^16.0.0", npm will install any version of React from 16.0.0 up to (but not including) 17.0.0. This means it could install 16.8.0, 16.9.0, or 16.13.0, for instance, but not 17.0.0 or any version starting with 17.



Tilde (~):  

:When you specify a tilde (~) before a version number in the package.json file, npm will install the latest patch version of the dependency while keeping the major and minor versions fixed.
:For example, if you specify "react": "~16.8.0", npm will install any version of React from 16.8.0 up to (but not including) 16.9.0. This means it could install 16.8.1, 16.8.2, or 16.8.3, for instance, but not 16.9.0 or any version starting with 17.



Q.5-->What is mean by the package-lock.json?

The package-lock.json file is a file generated by npm (Node Package Manager) that serves as a record of the exact versions of dependencies installed in a Node.js project. It was introduced in npm version 5 to address issues related to dependency versions and to provide deterministic and reproducible builds.



Q.6--> When i installed parcel a huge node module file is created what is that?

When you install Parcel, a large node_modules directory is created. The node_modules directory is where npm (Node Package Manager) installs all the dependencies required by your project, including Parcel itself and any other packages that your project relies on.

The node_modules directory can become large because it contains all the dependencies and their transitive dependencies needed by your project. As you add more dependencies to your project or update existing ones, the node_modules directory can grow in size.


Q.7--> what we have to put on the github?

the content which are regenerate is not a good way to put on the github like a node module.
the content which are hard to regenrate like package.json and package-lock.json is allowed to put on the github.


STEP:1-->Now we are going to ignite our app by the parcel
command is:npx parcel index.html  please keep in mind is that which chapter you have to open then plz open that folder otherwise it will show error.

Here npx means is that if you want to execute a package then you will write npx.





STEP:2-->copy the cdn link to import react is not a good way to use in our app so we are just installing react as dependencies for that i write the:
Command is:npm install react.
we are installing react as normal dependencies.

Now installing react dom by command:npm i(short form install) react-dom 
Now remove the react cdn there is no need of it.
From 1st chapter.



  
STEP:3-->Now when we use the first chapter code then run it then in console it shows a react is not defined Why?
we have just install the package put the code:

const parent = React.createElement("div",{ id: "parent" },[
        React.createElement("div",{ id: "child" },[
                React.createElement("h1",{},"hi i'm h1 tag"),
                React.createElement("h2",{},"hi i'm h2 tag"),]),
            
                
            React.createElement( "div",{ id: "child2" },[
              React.createElement("h1",{},"hi i'm h1 tag"),
              React.createElement("h2",{},"hi i'm h2 tag"),])
           
            ]);
         

     const root = ReactDOM.createRoot(document.getElementById("root"));
     root.render(parent); 
     console.log(parent);

Does not understand where the react keyword is comming from but this react is comming from cdn link.

Now copy that code in chapter 2.in app js now import React from "react" which is come from the node_modules.



STEP:4--><script src="./App.js"></script>
it treats this as a normal javascript file normal javascript file have no import in it so we need this to import so.
<script type="module" src="./App.js"></script> 
then it will become a not a normal browser script it becomes a module.





<--ABOUT Parcel-->
Q.8-->What is HMR?
HMR stands for Hot Module Replacement, which is a feature in React (as well as other JavaScript frameworks like Vue.js and Angular) that allows developers to update modules in the application without a full page refresh during development.

File watching algorithm:parser keep track of everything that we are doing in the code(which is written in the c++).

Caching: Faster Builds.

the most important things in the browser is that loads images in your page.
-Image Optimization.

-Minification
-Bundling
-Compressing
-Consistent Hashing
-Code Splitting
-Differential Bundling --- support older browser
-Diagnostic
-Error Handling
-its also help to host on HTTPS
-Tree Shaking--it removed unused code (like 4 function and we are just using only 2).
-Different dev and production bundles



Q.9--->How to create a prod bill
Command:npx parcel build index.html  this give an error so we have to go inside the package.json file so we have to remove this "main": "index.js".
now again:npx parcel build index.html:do the same thing


npx parcel build index.html now when we are doing this then it will bundle,it will minfy
it will do all the crazy stuff
